	ORG	0x0	; Настройка векторов прерываний
V0:	WORD	$DEFAULT,0x180
V1:	WORD	$DEFAULT,0x180
V2:	WORD	$INT2,0x180
V3:	WORD	$INT3,0x180
V4:	WORD	$DEFAULT,0x180
V5:	WORD	$DEFAULT,0x180
V6:	WORD	$DEFAULT,0x180
V7:	WORD	$DEFAULT,0x180
	ORG	0x012
X:	WORD	0x0000	; Ячейка для работы основной программы
LOWEST:	WORD	0xFFE2	; Наименьшее значение ОДЗ
HIGHEST:	WORD	0x0021	; Наибольшее значение ОДЗ
DEFAULT:	IRET		; "Пустое" прерывание
START:	DI		; Запрещаем прерывания
	CLA		; Очистка аккумулятора (загрузка значения 0)
	OUT	0x1	
	OUT	0x3
	OUT	0xB
	OUT	0xD
	OUT	0x11
	OUT	0x15
	OUT	0x19
	OUT	0x1D	; Запрет преерываний всум ВУ кроме ВУ-2 и ВУ-3
	LD	#0xA	; 1010 - значение для MR КВУ-2
	OUT	0x5
	LD	#0xB	; 1011 - значение для MR КВУ-3
	OUT	0x7
MAIN:	EI		; Разрешаем прерывания
	LD	X	; Загружаем в аккумулятор X
CYCLE:	SUB	#0x2	; Уменьшение значения на 2
	PUSH
	CALL	CHECK	; Вызов подпрограммы проверки ОДЗ
	POP
	ST	X	; Сохранение значения X
	NOP		; Точка отладки (конец цикла)
	JUMP	CYCLE	; Цикл (вечный)
INT2:	NOP		; Точка отладки, начало прерывания с ВУ-2 (сложить DR ВУ-2 с X)
	CLA
	IN	4	; Читаем значение на ВУ-2
	SXTB
	ADD	X	; Складываем с X
	PUSH
	CALL	CHECK	; Вызов подпрограммы проверки ОДЗ
	POP
	ST	X	; Сохранение значения X
	NOP		; Точка отладки, конец прерывания с ВУ-2
	IRET		; Возврат из прерывания
INT3:	NOP		; Точка отладки, начало прерывания с ВУ-3 (вывести -4X+6)
	PUSH		; Сохраняем в стек текущее значение на аккумуляторе
	LD	X	; Загружаем текущий X
	NEG		; -X
	ASL		; -2X
	ASL		; -4X
	ADD	#0x6	; -4X+6
	OUT	6	; Вывод
	POP		; Возвращаем значение аккумулятора
	NOP		; Точка отладки, конец прерывания с ВУ-3
	IRET		; Возврат из прерывания
CHECK:	LD	&1	; Загружаем переданное на проверку число
	CMP	LOWEST	; Если меньше нижней границы, то
	BMI	NEWX	; ставим максимальное по ОДЗ значение
	CMP	HIGHEST	; Если больше верхней границы, то
	BPL	NEWX	; ставим максимальное по ОДЗ значение
	JUMP	RETURN	; Если значение входит в ОДЗ, то на выход из подпрограммы
NEWX:	LD	HIGHEST	; Загрузка максимального по ОДЗ значения
RETURN:	ST	&1	; Сохранение в стек
	RET		; Возврат из подпрограммы
